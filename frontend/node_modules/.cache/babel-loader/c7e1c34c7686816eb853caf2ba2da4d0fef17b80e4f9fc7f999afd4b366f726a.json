{"ast":null,"code":"const BASE_URL = \"https://auth.nomoreparties.co\";\nfunction checkError(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Произошла ошибка:${res.status}`);\n  }\n}\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkError);\n};\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkError);\n};\nexport const getToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(checkError);\n};","map":{"version":3,"names":["BASE_URL","checkError","res","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","login","getToken","token","Authorization"],"sources":["/Users/mary/dev/pr12/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["const BASE_URL = \"https://auth.nomoreparties.co\";\n\nfunction checkError(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Произошла ошибка:${res.status}`);\n  }\n}\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  }).then(checkError);\n};\n\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  }).then(checkError);\n};\n\nexport const getToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(checkError);\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,SAASC,UAAUA,CAACC,GAAG,EAAE;EACvB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB,CAAC,MAAM;IACL,OAAOC,OAAO,CAACC,MAAM,CAAE,oBAAmBJ,GAAG,CAACK,MAAO,EAAC,CAAC;EACzD;AACF;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAChB,UAAU,CAAC;AACrB,CAAC;AAED,OAAO,MAAMiB,KAAK,GAAGA,CAACT,QAAQ,EAAEC,KAAK,KAAK;EACxC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAChB,UAAU,CAAC;AACrB,CAAC;AAED,OAAO,MAAMkB,QAAQ,GAAIC,KAAK,IAAK;EACjC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CAACH,IAAI,CAAChB,UAAU,CAAC;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}